plugins {
    id("org.springframework.boot") version "2.5.2"
    id("io.spring.dependency-management") version '1.0.11.RELEASE'
    id("java")
}


ext {
    springVersion = '5.2.11.RELEASE'
    springCloudVersion = '1.4.7.RELEASE'
    logbackVersion = '6.4'
    kafkaVersion = '2.6.0'
    lombokVersion = '1.18.20'
    jacksonVersion = '2.12.1'
    confluentVersion = '4.1.0'
    springRetryVersion = '1.3.0'
    jaywayJsonPathVersion = '2.4.0'
    swaggerUIVersion = '1.5.0'
    jedisVersion = '3.5.0'
    mockitoVersion = '3.7.7'
    hibernatesCacheVersion = '5.4.31.Final'
    gsonVersion = '2.8.6'
    springCloudVersion = '2020.0.3'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    /* Spring Boot WebFlux */
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    /* Spring Cloud Config */
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

    /*JUnit test library*/
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.mockito:mockito-core')

    /* Lombok */
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

group = 'com.metao.product.registry'
version = '0.0.1-SNAPSHOT'
description = 'registry-service'
sourceCompatibility = '16'


springBoot {
    buildInfo()
}

bootJar {
    archiveName "retails-ms-${project.version}.jar"
    launchScript()
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        compileOnly {
            extendsFrom annotationProcessor
        }
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude module: 'org.eclipse.jetty'
    }
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
