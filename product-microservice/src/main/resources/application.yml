server:
  port: ${PORT:8083}

kafka:
  topic:
    order: "book-order-topic"
    product: "product-topic"
    order-stock: "order-stock-topic"

spring:
  application:
    name: product-master
  kafka:
    # Required connection configs for Kafka producer, consumer, and admin
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    # Required connection configs for Confluent Cloud Schema Registry
    properties:
      stream-properties:
        schema.registry.url: ${SCHEMA_HOST}
        bootstrap.servers: ${BOOTSTRAP_SERVERS}
      bootstrap-servers: ${BOOTSTRAP_SERVERS}
      schema.registry.url: ${SCHEMA_HOST}
      security.protocol: PLAINTEXT
      sasl.mechanism: PLAIN
      credentials.source: USER_INFO
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
        auto.offset.reset: earliest
        specific.avro.reader: true
      isolation-level: read_committed
      auto-offset-reset: earliest
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      transaction-id-prefix: product-tx-
      properties:
        enable.idempotence: true
  output.ansi.enabled: ALWAYS

  datasource:
    url: jdbc:postgresql://localhost:5432/product
    username: product
    password: product

  jpa:
    database: POSTGRESQL
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      open-in-view: false
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
      datasource:
        url: jdbc:postgresql://localhost:5432/product
        username: postgres
        password: postgres

product-sample-data-path: data/products.txt

logging:
  pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"
  level:
    org.apache.kafka.streams.kstream: INFO
    org.springframework.data: DEBUG
    org.springframework.boot.autoconfigure: ERROR
    org.hibernate: DEBUG