server:
  port: ${PORT:8082}

kafka:
  stream:
    topic:
      order: "order-new2"
      "stock-order": "stock-order-new2"

spring:
  kafka:
    # Required connection configs for Kafka producer, consumer, and admin
    bootstrap-servers: pkc-ymrq7.us-east-2.aws.confluent.cloud:9092
    # Required connection configs for Confluent Cloud Schema Registry
    properties:
      bootstrap-servers: pkc-ymrq7.us-east-2.aws.confluent.cloud:9092
      schema.registry.url: https://psrc-1w11j.eu-central-1.aws.confluent.cloud
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      credentials.source: USER_INFO
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='JJWODIETBRU6LHKG'   password='Zsjmrq6HSgEnU8lRUwa67C4IbyuqfTpm5F32SZXKzT944lNUGuRrO/nWRgDo9WJ8';
      schema:
        registry:
          url: https://psrc-1w11j.eu-central-1.aws.confluent.cloud
          basic:
            auth:
              user:
                info: 7ZVNTJ4OMZWUMT7R:5xJEdD6PMssGTh3k8WB8pMk9vYBFr9pGPX2lSg+os2Do0OFD8Nlzw/TPHa2PrJMc
      basic:
        auth:
          credentials:
            source: USER_INFO
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    streams:
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        num.standby.replicas: 1
        num.stream.threads: 2
        max.request.size: 8388608        # 84 MiB
        topic.max.message.bytes: 8388608 # 84 MiB
        topology.optimization: all
        state.dir: /tmp/kafka-streams01
  cloud:
    discovery:
      enabled: false
  datasource:
    url: jdbc:h2:mem:product-app;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    platform: h2
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
  application:
    name: "order"
# spring:
#   jpa:
#     database: POSTGRESQL
#     show-sql: true
#     generate-ddl: true
#     hibernate:
#       ddl-auto: update
#     database-platform: org.hibernate.dialect.PostgreSQL9Dialect
#     properties:
#       hibernate:
#         temp:
#           use_jdbc_metadata_defaults: false
#     open-in-view: false
#   datasource:
#     url: jdbc:postgresql://localhost:5432/product
#     username: postgres
#     password: secset

logging:
  level:
    org.springframework.data: DEBUG
    org.springframework.boot.autoconfigure: ERROR
    org.springframework.web.reactive: DEBUG