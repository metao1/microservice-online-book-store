server:
  error:
    include-message: always
    include-binding-errors: always
  port: ${PORT:8080}

kafka:
  topic:
    id: "book-order-id"
    name: "book-order"
    group-id: "book-order-group"

spring:
  application:
    name: order-microservice
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    # Required connection configs for Confluent Cloud Schema Registry
    properties:
      security.protocol: PLAINTEXT
      sasl.mechanism: PLAIN
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      isolation-level: read_committed
      auto-offset-reset: none
      enable-auto-commit: false
      properties:
        auto.offset.reset: earliest
        specific.protobuf.key.type: java.lang.String
        specific.protobuf.value.type: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        allow.auto.create.topics: 'false'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: true
  output.ansi.enabled: ALWAYS
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    hikari:
      auto-commit: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    outOfOrder: true
    locations: classpath:db/migration
    clean-disabled: true
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      open-in-view: false
      hibernate:
        connection:
          provider_disables_autocommit: true
        temp:
          use_jdbc_metadata_defaults: false

logging:
  pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"
  level:
    org.springframework.data: INFO
    org.springframework.boot.autoconfigure: ERROR
    org.hibernate: INFO