server:
  error:
    include-message: always
    include-binding-errors: always
  port: 8083

kafka:
  stream:
    topic:
      order: "order"
      stock: "stock"
      output: "output"
      payment: "payment"

spring:
  kafka:
    bootstrap-servers: "PLAINTEXT://localhost:9092"
    properties:
      bootstrap.servers: "PLAINTEXT://localhost:9092"
      schema.registry.url: http://localhost:8081
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro.reader: true
    producer:
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  #    streams:
  #      properties:
  #        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  #        default.value.serde: io.confluent.kafka.streams.serdes.avro.ReflectionAvroSerde
  #        spring.json.trusted.packages: "*"
  #      #state-dir: /tmp/kafka-streams/
  output:
    ansi:
      enabled: ALWAYS
  application:
    name: "order"
  cloud:
    discovery:
      enabled: false
    compatibility-verifier:
      enabled: false
  messages:
    encoding: